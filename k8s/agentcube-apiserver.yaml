# All-in-one deployment file for agentcube-apiserver
# Apply with: kubectl apply -f k8s/agentcube-apiserver.yaml

---
apiVersion: v1
kind: Namespace
metadata:
  name: agentcube

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agentcube-apiserver
  namespace: agentcube

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agentcube-apiserver
rules:
  - apiGroups: ["agents.x-k8s.io"]
    resources: ["sandboxes"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agentcube-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agentcube-apiserver
subjects:
  - kind: ServiceAccount
    name: agentcube-apiserver
    namespace: agentcube

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agentcube-apiserver
  namespace: agentcube
  labels:
    app: agentcube-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agentcube-apiserver
  template:
    metadata:
      labels:
        app: agentcube-apiserver
    spec:
      serviceAccountName: agentcube-apiserver
      containers:
        - name: agentcube-apiserver
          image: agentcube-apiserver:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          args:
            - --port=8080
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: agentcube-apiserver
  namespace: agentcube
  labels:
    app: agentcube-apiserver
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: agentcube-apiserver
